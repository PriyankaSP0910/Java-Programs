import pandas as pd
from mlxtend.frequent_patterns import apriori
from mlxtend.frequent_patterns import association_rules

# Read the dataset from 'bask.csv'
data = pd.read_csv('bask.csv')

# Fill missing values with empty strings
data = data.fillna('')

# Perform one-hot encoding
oht = pd.get_dummies(data)

# Find frequent item sets with a minimum support of 0.4
frequent_item_sets = apriori(oht, min_support=0.4, use_colnames=True)

# Generate association rules with a minimum confidence of 0.7
association_rules_df = association_rules(frequent_item_sets, metric='confidence', min_threshold=0.7)

# Display all association rules along with their support and confidence
for index, row in association_rules_df.iterrows():
    antecedents = ', '.join(list(row['antecedents']))
    consequents = ', '.join(list(row['consequents']))
    support = row['support']
    confidence = row['confidence']
    print(f"Rule: {antecedents} => {consequents}")
    print(f"Support: {support}, Confidence: {confidence}")
    print()
